#!/usr/bin/env bash
set -euo pipefail

bold=$(tput bold)
reset=$(tput sgr0)
orange=$'\033[38;5;208m'
green=$'\033[38;5;34m'
arrow=$'\u2192'

# must be root (no subshell "return"; use exit)
if (( EUID != 0 )); then
  printf "You must run this script as admin.\n"
  exit 1
fi

SHARE="parquet_files"
CONF_PATH="/etc/samba/smb.conf"

toggle() {
  local val="$1" # yes|no
  # Edit within the [parquet_files] section up to the next section header
  sed -i "/^\[$SHARE\]/,/^\[/{s/^[[:space:]]*read only[[:space:]]*=.*/   read only = ${val}/}" "$CONF_PATH"
}

case "${1-}" in
  0)
    toggle yes
    printf "    %s The share %s'%s'%s is now %sread-only%s.\n" "$arrow" "$bold" "$SHARE" "$reset" "$orange" "$reset"
    ;;
  1)
    toggle no
    printf "    %s The share %s'%s'%s is now %swritable%s.\n" "$arrow" "$bold" "$SHARE" "$reset" "$green" "$reset"
    ;;
  "" )
    # Report current state
    current_state=$(
      awk -v s="$SHARE" '
        $0 ~ "^[[:space:]]*\\[" s "\\]" { in=1; next }
        in && $0 ~ /^[[:space:]]*\[/ { in=0 }
        in && $0 ~ /^[[:space:]]*read only[[:space:]]*=/ {
          sub(/.*=/,""); gsub(/[[:space:]]/,""); print; exit
        }' "$CONF_PATH"
    )
    if [[ "${current_state,,}" == "yes" ]]; then
      printf "    %s%s%s The share %s'%s'%s is currently %sRead-Only%s\n" "$bold" "$arrow" "$reset" "$bold" "$SHARE" "$reset" "$orange" "$reset"
    else
      printf "    %s%s%s The share %s'%s'%s is currently %sWritable%s\n" "$bold" "$arrow" "$reset" "$bold" "$SHARE" "$reset" "$green" "$reset"
    fi
    printf "Unknown parameter. [0: Read-Only; 1: Writable]\n"
    ;;
  * )
    printf "Unknown parameter. [0: Read-Only; 1: Writable]\n"
    exit 2
    ;;
esac

systemctl restart smbd
