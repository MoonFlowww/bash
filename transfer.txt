#!/usr/bin/env bash
set -euo pipefail
bold=$(tput bold)
reset=$(tput sgr0)
orange=$'\033[38;5;208m'
green=$'\033[38;5;34m'
arrow=$'\u2192'
if (( EUID != 0 )); then
  printf "You must run this script as admin.\n"
  exit 1
fi
SHARE="parquet_files"
CONF_PATH="/etc/samba/smb.conf"
toggle() {
  local val="$1" # yes|no
  # Try to replace within the section
  sed -i "/^\[$SHARE\]/,/^\[/{s/^[[:space:]]*read only[[:space:]]*=.*/   read only = ${val}/}" "$CONF_PATH"
  # If the key wasn't present, insert it right after the section header
  if ! grep -A20 "^\[$SHARE\]" "$CONF_PATH" | grep -q "^[[:space:]]*read only[[:space:]]*="; then
    sed -i "/^\[$SHARE\]/a\   read only = ${val}" "$CONF_PATH"
  fi
}
needs_restart=false
case "${1-}" in
  0)
    toggle yes
    printf "    %s%s%s The share %s'%s'%s is now %sread-only%s.\n" "$bold" "$arrow" "$reset" "$bold" "$SHARE" "$reset" "$orange" "$reset"
    needs_restart=true
    ;;
  1)
    toggle no
    printf "    %s%s%s The share %s'%s'%s is now %swritable%s.\n" "$bold" "$arrow" "$reset" "$bold" "$SHARE" "$reset" "$green" "$reset"
    needs_restart=true
    ;;
  "" )
    # Extract the section and find read only value
    current_state=$(sed -n "/^\[$SHARE\]/,/^\[/{/^[[:space:]]*read only[[:space:]]*=/p}" "$CONF_PATH" | sed 's/.*=[[:space:]]*//' | tr -d ' ')
    
    if [[ "$current_state" == "yes" ]]; then
      printf "    %s%s%s The share %s'%s'%s is currently %sRead-Only%s\n" "$bold" "$arrow" "$reset" "$bold" "$SHARE" "$reset" "$orange" "$reset"
    else
      printf "    %s%s%s The share %s'%s'%s is currently %sWritable%s\n" "$bold" "$arrow" "$reset" "$bold" "$SHARE" "$reset" "$green" "$reset"
    fi
    printf "Usage: %s 0|1   (0=read-only, 1=writable)\n" "$(basename "$0")"
    ;;
  * )
    printf "Usage: %s 0|1   (0=read-only, 1=writable)\n" "$(basename "$0")"
    exit 2
    ;;
esac
if $needs_restart; then
  systemctl restart smbd
fi
